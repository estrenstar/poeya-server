{"version":3,"sources":["_helpers/browser.helper.js","_helpers/survey.helper.js","components/pages/surveys/Surveys.styled.js","components/pages/surveys/core/SurveysHeader.js","components/pages/surveys/core/SurveysBody.js","components/pages/surveys/core/SurveyForm.js","components/pages/surveys/Surveys.js","_helpers/formValidator.helper.js","components/hooks/useForm.js","_helpers/form_fields_descriptors/signInForm.js","_helpers/form_fields_descriptors/surveyForm.js","_helpers/form_fields_descriptors/accountForm.js","components/hooks/useDisclosure.js"],"names":["openUrlInNewTab","url","window","open","openOrDownloadPDFFromPDFUrl","pdfUrl","linkTag","document","createElement","target","rel","href","body","append","createLinkTagFromPDFUrl","click","parentNode","removeChild","formatTaxNoticeNumber","_ref$occupants","arguments","length","undefined","occupants","_ref$occupants2","occupant","_slicedToArray","taxNoticeNumber","formatTaxNoticeReference","_ref2$occupants","_ref2$occupants2","taxNoticeReference","translateHouseholdSituation","householdSituation","_HOUSEHOLD_SITUATIONS","_defineProperty","HOUSEHOLD_SITUATIONS","PRECARITY","MODEST","CLASSIC","translateMPRProfile","mprProfile","_MPR_PROFILES$BLUE$MP","MPR_PROFILES","BLUE","NONE","PURPLE","PINK","YELLOW","getHouseholdSituationColorScheme","_HOUSEHOLD_SITUATIONS2","formatSurveysForTable","map","survey","_objectSpread","customer","fullName","filterCurrentDaySurveysCount","filter","moment","createdAt","isSame","filterCurrentWeekSurveysCount","isBetween","startOf","endOf","filterCurrentMonthSurveysCount","styled","div","_templateObject","_taggedTemplateLiteral","SurveysHeader","_ref","_ref$surveys","surveys","_ref$profile","profile","onOpenCreateSurveyForm","_jsx","className","children","_jsxs","MainCard","Header","orientation","spacing","Text","Title","LABELS_SURVEYS","isNonEmptyObject","SubTitle","LABEL_SURVEYS_SUBTITLE","formatDate","Button","onClick","LABEL_CREATE_SURVEY","Body","Stack","LABEL_WELCOME_BACK","weight","Statistic","variant","label","LABEL_DAILY","value","surveyHelper","LABEL_WEEKLY","LABEL_MONTHLY","LABEL_TOTAL","Footer","SurveysBody","_ref$requesting","requesting","onPrintSurvey","onGenerateSurveyReport","onDeleteSurvey","additionColumns","role","ROLES","ADMINISTRATOR","push","title","LABEL_CREATED_BY","key","dataIndex","sortable","formatter","formatCreatedBy","render","_ref2","_ref2$createdBy","createdBy","Card","Table","columns","LABEL_REFERENCE","dataType","LABEL_CREATED_AT","LABEL_CUSTOMER","LABEL_TAX_NOTICE_NUMBER","LABEL_TAX_NOTICE_REFERENCE","LABEL_PREMIUM_PROFILE","_ref3","Badge","colorScheme","concat","noDataMessage","LABEL_NO_SURVEYS","dataSource","actions","icon","Icon","name","LABEL_MENU_ACTION_PRINT","isDisabled","isNullishOrEmpty","fileUrl","LABEL_MENU_ACTION_REGENERATE","isNonEmptyString","LABEL_MENU_ACTION_DELETE","lastName","SurveyForm","_formatSelectOptions","_formatSelectOptions2","_formatSelectOptions3","_formatSelectOptions4","_formatSelectOptions5","_formatSelectOptions6","_formErrors$occupants","_formErrors$occupants2","_formErrors$occupants3","_formErrors$occupants4","_formErrors$occupants5","_formErrors$occupants6","_formErrors$occupants7","_formErrors$occupants8","_formErrors$occupants9","_formErrors$occupants10","_formatSelectOptions7","_formatSelectOptions8","_formatSelectOptions9","_formatSelectOptions10","_formatSelectOptions11","mode","formState","formErrors","onChange","onSubmit","useDispatch","state","ui","handleOccupantChange","index","_formState$occupants","Form","Group","Field","fluid","type","LABEL_OPERATION_TYPE","options","formatSelectOptions","OPERATION_TYPES","defaultOption","toSelectOption","operationType","error","disabled","FORM_MODES","EDITION","LABEL_FULL_NAME","defaultValue","LABEL_BUILDING_AGE","BUILDING_AGES","MORE_THAN_FIFTEEN_YEARS","LESS_THAN_FIFTEEN_YEARS","buildingAge","LABEL_LIVING_SPACE_AREA","livingSpaceArea","LABEL_LOFT_INCLUDED","YES_NO","YES","NO","loftIncluded","LABEL_LOFT_TYPE","LOFT_TYPES","LOST_ACCESSIBLE","LOST_INACCESSIBLE","FURNISHED","CONVERTIBLE","loftType","LABEL_LOFT_AREA","loftArea","LABEL_LOFT_INSULATED","loftInsulated","LABEL_LOFT_INSULATION_PERIOD","INSULATION_PERIODS","MORE_THAN_TEN_YEARS","LESS_THAN_TEN_YEARS","loftInsulationPeriod","LABEL_LOFT_COMMENTS","loftComments","Divider","LABEL_MPR_BENEFICIARY","mprBeneficiary","LABEL_ONE_EURO_BENEFICIARY","oneEuroBeneficiary","LABEL_REFERENCE_TAX_INCOME","referenceTaxIncome","LABEL_BIRTHDATE","birthDate","LABEL_NUMBER_OF_DEPENDENTS","numberOfDependents","Row","radio","LABEL_STREET_NUMBER","streetNumber","LABEL_STREET_NAME","streetName","LABEL_CITY","city","LABEL_POSTAL_CODE","postalCode","LABEL_OWNING_TYPE","OWNING_TYPES","owningType","LABEL_WALL_INSULATION_TYPE","WALL_INSULATIONS","ITE","ITI","wallInsulationType","LABEL_HEATING_TYPE","HEATING_TYPES","WOOD","GAS","OIL","HEATING_PUMP","ELECTRICITY","heatingType","LABEL_OIL_HEATING_TYPE_BOILER","comment","SUB_LABEL_OIL_HEATING_TYPE_BOILER","oilHeatingTypeBoiler","LABEL_WATER_HEATING_TYPE","WATER_HEATING_TYPES","waterHeatingType","OTHER","LABEL_WATER_HEATING_TYPE_SPECIFIED","waterHeatingTypeSpecified","LABEL_BASEMENT_INCLUDED","basementIncluded","LABEL_LOW_FLOOR_INSULATION_PERIOD","lowFloorInsulationPeriod","LABEL_BASEMENT_AREA_FOR_BOILER","basementAreaForBoiler","LABEL_RADIATOR_TYPE","RADIATOR_TYPES","radiatorType","LABEL_FIREPLACE_INCLUDED","fireplaceIncluded","LABEL_PHONE_NUMBER","phone","required","LABEL_COMMENTS","comments","LABEL_SAVE","Surveys","dispatch","_useSelector","useSelector","core","surveysState","authState","surveyModal","useDisclosure","surveyForm","useForm","_useAlert","useAlert","showAlert","hideAlert","_useState","useState","_useState2","selectedSurvey","setSelectedSurvey","useEffect","getSurveys","HomeContainer","SurveysStyled","setMode","resetFormState","handleShow","openSurveyModal","CREATION","browserHelper","generateSurveyReport","surveyId","id","message","LABEL_DELETE_SURVEY","deleteSurvey","processDeleteSurvey","LABEL_DELETE","shown","Modal","MODAL_TITLE_SURVEY","onHide","handleHide","handleChange","_formValidatorHelper$","formValidatorHelper","validateForm","surveyFormFieldsDescriptor","validForm","setFormErrors","createSurvey","onSurveyCreated","processCreateSurvey","formFields","currentIndex","reduce","property","fields","validate","_ref3$minLength","minLength","restProps","_objectWithoutProperties","_excluded","Array","fill","forEach","item","fieldValidationResult","_validateFieldValue","field","fieldValidation","validField","errorMessageSuffix","pattern","_field$required","_ref4","valueRequired","validateValueRequirement","validateValueType","dataTypeValidationStrategies","email","isValidEmail","isValidPhone","Object","keys","includes","validateValueDataType","test","validateValuePattern","validateFieldValue","extractFormStateUpdates","source","updates","JSON","stringify","setFormState","_useState3","_useState4","_useState5","_useState6","formDisabledFields","setFormDisabledFields","_useState7","_useState8","useCallback","currentFormState","currentFormErrors","clone","cloneObject","handleSubmit","evt","preventDefault","updateFormState","formStateUpdates","clonedStateUpdates","_ref$language","language","LANGUAGES","FR","LABEL_EMAIL","LABEL_PASSWORD","_ref5","_ref6","_ref7","_ref8","_ref9","_ref10","_ref11","_ref12","LABEL_LAST_NAME","LABEL_FIRST_NAME","LABEL_ROLE","LABEL_CONFIRM_PASSWORD","password","confirmPassword","samePasswords","LABEL_PASSWORDS_ARE_DIFFERENT","_ref$initialTitle","initialTitle","setShown","setTitle"],"mappings":"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","file":"static/js/6.a24df256.chunk.js","sourcesContent":["function openOrDownloadPDFFromPDFUrl(pdfUrl) {\n  const linkTag = createLinkTagFromPDFUrl(pdfUrl);\n  linkTag.click();\n  linkTag.parentNode.removeChild(linkTag);\n}\n\nfunction createLinkTagFromPDFUrl(pdfUrl) {\n  const linkTag = document.createElement('a');\n  linkTag.target = '_blank';\n  linkTag.rel = 'noopener noreferrer';\n  linkTag.href = pdfUrl;\n  document.body.append(linkTag);\n\n  return linkTag;\n}\n\nfunction openUrlInNewTab(url) {\n  window.open(url, '_blank');\n}\n\nexport default { openUrlInNewTab, openOrDownloadPDFFromPDFUrl };\n","import moment from 'moment';\n\nimport { HOUSEHOLD_SITUATIONS, MPR_PROFILES } from './enums';\n\nfunction translateMPRProfile(mprProfile) {\n  return { [MPR_PROFILES.BLUE]: 'Bleu', [MPR_PROFILES.NONE]: 'Aucun', [MPR_PROFILES.PURPLE]: 'Violet', [MPR_PROFILES.PINK]: 'Rose', [MPR_PROFILES.YELLOW]: 'Jaune' }[mprProfile];\n}\n\nfunction translateHouseholdSituation(householdSituation) {\n  return { [HOUSEHOLD_SITUATIONS.PRECARITY]: 'Précaire', [HOUSEHOLD_SITUATIONS.MODEST]: 'Modeste', [HOUSEHOLD_SITUATIONS.CLASSIC]: 'Classique' }[householdSituation];\n}\n\nfunction getHouseholdSituationColorScheme(householdSituation) {\n  return { [HOUSEHOLD_SITUATIONS.PRECARITY]: 'blue', [HOUSEHOLD_SITUATIONS.MODEST]: 'yellow', [HOUSEHOLD_SITUATIONS.CLASSIC]: 'purple' }[householdSituation];\n}\n\nfunction formatSurveysForTable(surveys = []) {\n  return surveys.map((survey) => ({\n    ...survey,\n    customer: survey.fullName,\n    taxNoticeNumber: formatTaxNoticeNumber(survey),\n    taxNoticeReference: formatTaxNoticeReference(survey),\n  }));\n}\n\nfunction formatTaxNoticeNumber({ occupants: [occupant] = [] } = {}) {\n  return occupant?.taxNoticeNumber;\n}\n\nfunction formatTaxNoticeReference({ occupants: [occupant] = [] } = {}) {\n  return occupant?.taxNoticeReference;\n}\n\nfunction filterCurrentDaySurveysCount(surveys = []) {\n  return surveys.filter((survey) => {\n    return moment(survey.createdAt).isSame(moment(), 'day');\n  }).length;\n}\n\nfunction filterCurrentWeekSurveysCount(surveys = []) {\n  return surveys.filter((survey) => {\n    return moment(survey.createdAt).isBetween(moment().startOf('week'), moment().endOf('week'));\n  }).length;\n}\n\nfunction filterCurrentMonthSurveysCount(surveys = []) {\n  return surveys.filter((survey) => {\n    return moment(survey.createdAt).isBetween(moment().startOf('month'), moment().endOf('month'));\n  }).length;\n}\n\nexport default {\n  translateHouseholdSituation,\n  translateMPRProfile,\n  getHouseholdSituationColorScheme,\n  formatSurveysForTable,\n  filterCurrentDaySurveysCount,\n  filterCurrentWeekSurveysCount,\n  filterCurrentMonthSurveysCount,\n};\n","import styled from 'styled-components';\n\nexport default styled.div``;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport surveyHelper from '../../../../_helpers/survey.helper';\nimport {\n  LABEL_CREATE_SURVEY,\n  LABELS_SURVEYS,\n  LABEL_DAILY,\n  LABEL_MONTHLY,\n  LABEL_WEEKLY,\n  LABEL_SURVEYS_SUBTITLE,\n  LABEL_WELCOME_BACK,\n  LABEL_TOTAL,\n} from '../../../../_helpers/labels';\nimport { isNonEmptyObject } from '../../../../_helpers/dataValidator.helper';\nimport { formatDate } from '../../../../_helpers/date.helper';\n\nimport { Button, MainCard, Stack, Text, Statistic } from '../../../library';\n\nexport default function SurveysHeader({ surveys = [], profile = {}, onOpenCreateSurveyForm }) {\n  return (\n    <div className=\"surveysHeader\">\n      <MainCard>\n        <MainCard.Header orientation=\"vertical\" spacing={1.5}>\n          <div>\n            <Text.Title>{LABELS_SURVEYS()}</Text.Title>\n            {isNonEmptyObject(surveys[0]) && (\n              <Text.SubTitle>\n                {LABEL_SURVEYS_SUBTITLE()} {formatDate(surveys[0].createdAt)}\n              </Text.SubTitle>\n            )}\n          </div>\n          <Button onClick={onOpenCreateSurveyForm}>{LABEL_CREATE_SURVEY()}</Button>\n        </MainCard.Header>\n        <MainCard.Body>\n          <Stack orientation=\"vertical\" spacing={1.5}>\n            {isNonEmptyObject(profile) && (\n              <Stack spacing={0.5}>\n                <Text>{LABEL_WELCOME_BACK()}</Text>\n                <Text weight=\"medium\">{profile.fullName} !</Text>\n              </Stack>\n            )}\n            <Stack spacing={1.5}>\n              <Statistic variant=\"default\" className=\"Today\" label={LABEL_DAILY()} value={surveyHelper.filterCurrentDaySurveysCount(surveys)} />\n              <Statistic variant=\"default\" className=\"Week\" label={LABEL_WEEKLY()} value={surveyHelper.filterCurrentWeekSurveysCount(surveys)} />\n              <Statistic variant=\"default\" className=\"Month\" label={LABEL_MONTHLY()} value={surveyHelper.filterCurrentMonthSurveysCount(surveys)} />\n              <Statistic variant=\"default\" className=\"Total\" label={LABEL_TOTAL()} value={surveys.length} />\n            </Stack>\n          </Stack>\n        </MainCard.Body>\n        <MainCard.Footer></MainCard.Footer>\n      </MainCard>\n    </div>\n  );\n}\nSurveysHeader.propTypes = {\n  surveys: PropTypes.arrayOf(PropTypes.shape({})),\n  profile: PropTypes.shape({}),\n  onOpenCreateSurveyForm: PropTypes.func.isRequired,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport surveyHelper from '../../../../_helpers/survey.helper';\nimport {\n  LABEL_CREATED_AT,\n  LABEL_CREATED_BY,\n  LABEL_CUSTOMER,\n  LABEL_MENU_ACTION_DELETE,\n  LABEL_MENU_ACTION_PRINT,\n  LABEL_MENU_ACTION_REGENERATE,\n  LABEL_NO_SURVEYS,\n  LABEL_PREMIUM_PROFILE,\n  LABEL_REFERENCE,\n  LABEL_TAX_NOTICE_NUMBER,\n  LABEL_TAX_NOTICE_REFERENCE,\n} from '../../../../_helpers/labels';\nimport { isNonEmptyObject, isNonEmptyString, isNullishOrEmpty } from '../../../../_helpers/dataValidator.helper';\nimport { ROLES } from '../../../../_helpers/enums';\n\nimport { Badge, Card, Icon, Table, Text } from '../../../library';\n\nexport default function SurveysBody({ surveys = [], requesting = false, profile = {}, onPrintSurvey, onGenerateSurveyReport, onDeleteSurvey }) {\n  const additionColumns = [];\n  if (profile?.role === ROLES.ADMINISTRATOR) {\n    additionColumns.push({\n      title: LABEL_CREATED_BY(),\n      key: 'createdBy',\n      dataIndex: 'createdBy',\n      sortable: true,\n      formatter: formatCreatedBy,\n      render({ createdBy = {} }) {\n        return <Text weight=\"medium\">{formatCreatedBy(createdBy)}</Text>;\n      },\n    });\n  }\n\n  return (\n    <Card>\n      <Table\n        columns={[\n          {\n            title: LABEL_REFERENCE(),\n            key: 'reference',\n            dataIndex: 'reference',\n            dataType: 'code',\n            sortable: true,\n          },\n          {\n            title: LABEL_CREATED_AT(),\n            key: 'createdAt',\n            dataIndex: 'createdAt',\n            dataType: 'date',\n            sortable: true,\n          },\n          {\n            title: LABEL_CUSTOMER(),\n            key: 'customer',\n            dataIndex: 'customer',\n            sortable: true,\n          },\n          {\n            title: LABEL_TAX_NOTICE_NUMBER(),\n            key: 'taxNoticeNumber',\n            dataIndex: 'taxNoticeNumber',\n          },\n          {\n            title: LABEL_TAX_NOTICE_REFERENCE(),\n            key: 'taxNoticeReference',\n            dataIndex: 'taxNoticeReference',\n          },\n          {\n            title: LABEL_PREMIUM_PROFILE(),\n            key: 'householdSituation',\n            dataIndex: 'householdSituation',\n            sortable: true,\n            formatter: surveyHelper.translateHouseholdSituation,\n            render: ({ householdSituation }) => (\n              <Badge colorScheme={surveyHelper.getHouseholdSituationColorScheme(householdSituation)}>{surveyHelper.translateHouseholdSituation(householdSituation)}</Badge>\n            ),\n          },\n          ...additionColumns,\n        ]}\n        noDataMessage={LABEL_NO_SURVEYS()}\n        dataSource={surveys}\n        requesting={requesting}\n        actions={[\n          {\n            icon: <Icon name=\"print\" />,\n            label: LABEL_MENU_ACTION_PRINT(),\n            isDisabled(survey) {\n              return isNullishOrEmpty(survey.fileUrl);\n            },\n            onClick: onPrintSurvey,\n          },\n          {\n            icon: <Icon name=\"refresh\" />,\n            label: LABEL_MENU_ACTION_REGENERATE(),\n            isDisabled(survey) {\n              return isNonEmptyString(survey.fileUrl);\n            },\n            onClick: onGenerateSurveyReport,\n          },\n          { icon: <Icon name=\"delete\" />, label: LABEL_MENU_ACTION_DELETE(), onClick: onDeleteSurvey },\n        ]}\n      />\n    </Card>\n  );\n}\nSurveysBody.propTypes = {\n  surveys: PropTypes.arrayOf(PropTypes.shape({})),\n  requesting: PropTypes.bool,\n  profile: PropTypes.shape({}),\n  onPrintSurvey: PropTypes.func.isRequired,\n  onGenerateSurveyReport: PropTypes.func.isRequired,\n  onDeleteSurvey: PropTypes.func.isRequired,\n};\n\nfunction formatCreatedBy(createdBy) {\n  return isNonEmptyObject(createdBy) ? createdBy.lastName : '';\n}\n","import React from 'react';\nimport { useDispatch } from 'react-redux';\n\nimport {\n  FORM_MODES,\n  BUILDING_AGES,\n  YES_NO,\n  LOFT_TYPES,\n  INSULATION_PERIODS,\n  OWNING_TYPES,\n  WALL_INSULATIONS,\n  HEATING_TYPES,\n  WATER_HEATING_TYPES,\n  RADIATOR_TYPES,\n  OPERATION_TYPES,\n} from '../../../../_helpers/enums';\nimport {\n  LABEL_BASEMENT_AREA_FOR_BOILER,\n  LABEL_BASEMENT_INCLUDED,\n  LABEL_BIRTHDATE,\n  LABEL_BUILDING_AGE,\n  LABEL_CITY,\n  LABEL_COMMENTS,\n  LABEL_FIREPLACE_INCLUDED,\n  LABEL_FULL_NAME,\n  LABEL_HEATING_TYPE,\n  LABEL_LIVING_SPACE_AREA,\n  LABEL_LOFT_AREA,\n  LABEL_LOFT_COMMENTS,\n  LABEL_LOFT_INCLUDED,\n  LABEL_LOFT_INSULATED,\n  LABEL_LOFT_INSULATION_PERIOD,\n  LABEL_LOFT_TYPE,\n  LABEL_LOW_FLOOR_INSULATION_PERIOD,\n  LABEL_MPR_BENEFICIARY,\n  LABEL_NUMBER_OF_DEPENDENTS,\n  LABEL_OIL_HEATING_TYPE_BOILER,\n  LABEL_ONE_EURO_BENEFICIARY,\n  LABEL_OPERATION_TYPE,\n  LABEL_OWNING_TYPE,\n  LABEL_PHONE_NUMBER,\n  LABEL_POSTAL_CODE,\n  LABEL_RADIATOR_TYPE,\n  LABEL_REFERENCE_TAX_INCOME,\n  LABEL_SAVE,\n  LABEL_STREET_NAME,\n  LABEL_STREET_NUMBER,\n  LABEL_TAX_NOTICE_NUMBER,\n  LABEL_TAX_NOTICE_REFERENCE,\n  LABEL_WALL_INSULATION_TYPE,\n  LABEL_WATER_HEATING_TYPE,\n  LABEL_WATER_HEATING_TYPE_SPECIFIED,\n  SUB_LABEL_OIL_HEATING_TYPE_BOILER,\n} from '../../../../_helpers/labels';\nimport { formPropTypes } from '../../../../_helpers/propTypes.schemas';\nimport { formatSelectOptions, toSelectOption } from '../../../../_helpers/library.helper';\nimport { isNullishOrEmpty } from '../../../../_helpers/dataValidator.helper';\n\nimport { Form } from '../../../helpers';\nimport { Button, Field } from '../../../library';\n\nexport default function SurveyForm({ mode, formState, formErrors, onChange, onSubmit }) {\n  const { requesting } = useDispatch((state) => state.ui.formState);\n\n  function handleOccupantChange({ index, name, value }) {\n    let { occupants = [] } = { ...formState };\n    if (isNullishOrEmpty(occupants[index])) {\n      occupants[index] = {};\n    }\n    occupants[index][name] = value;\n    onChange({ name: 'occupants', value: occupants });\n  }\n\n  function handleSubmit() {\n    if (requesting) return;\n    onSubmit();\n  }\n\n  return (\n    <Form>\n      <Form.Body>\n        <Form.Group>\n          <Field\n            fluid\n            type=\"select\"\n            name=\"operationType\"\n            label={LABEL_OPERATION_TYPE()}\n            options={formatSelectOptions(OPERATION_TYPES)}\n            defaultOption={toSelectOption(formState.operationType)}\n            error={formErrors.operationType}\n            disabled={mode === FORM_MODES.EDITION}\n            onChange={onChange}\n          />\n        </Form.Group>\n        <Form.Group>\n          <Field fluid type=\"text\" name=\"fullName\" label={LABEL_FULL_NAME()} defaultValue={formState.fullName} error={formErrors.fullName} onChange={onChange} />\n        </Form.Group>\n        <Form.Group>\n          <Field\n            fluid\n            type=\"select\"\n            name=\"buildingAge\"\n            label={LABEL_BUILDING_AGE()}\n            options={formatSelectOptions(BUILDING_AGES, { [BUILDING_AGES.MORE_THAN_FIFTEEN_YEARS]: 'green', [BUILDING_AGES.LESS_THAN_FIFTEEN_YEARS]: 'red' })}\n            defaultOption={toSelectOption(formState.buildingAge)}\n            error={formErrors.buildingAge}\n            disabled={mode === FORM_MODES.EDITION}\n            onChange={onChange}\n          />\n        </Form.Group>\n        <Form.Group>\n          <Field\n            fluid\n            type=\"number\"\n            name=\"livingSpaceArea\"\n            label={LABEL_LIVING_SPACE_AREA()}\n            defaultValue={formState.livingSpaceArea}\n            error={formErrors.livingSpaceArea}\n            onChange={onChange}\n          />\n        </Form.Group>\n\n        <Form.Group>\n          <Field\n            fluid\n            type=\"select\"\n            name=\"loftIncluded\"\n            label={LABEL_LOFT_INCLUDED()}\n            options={formatSelectOptions(YES_NO, { [YES_NO.YES]: 'green', [YES_NO.NO]: 'red' })}\n            defaultOption={toSelectOption(formState.loftIncluded)}\n            error={formErrors.loftIncluded}\n            disabled={mode === FORM_MODES.EDITION}\n            onChange={onChange}\n          />\n        </Form.Group>\n        <Form.Group>\n          <Field\n            fluid\n            type=\"select\"\n            name=\"loftType\"\n            label={LABEL_LOFT_TYPE()}\n            options={formatSelectOptions(LOFT_TYPES, {\n              [LOFT_TYPES.LOST_ACCESSIBLE]: 'green',\n              [LOFT_TYPES.LOST_INACCESSIBLE]: 'red',\n              [LOFT_TYPES.FURNISHED]: 'red',\n              [LOFT_TYPES.CONVERTIBLE]: 'green',\n            })}\n            defaultOption={toSelectOption(formState.loftType)}\n            error={formErrors.loftType}\n            disabled={mode === FORM_MODES.EDITION}\n            onChange={onChange}\n          />\n        </Form.Group>\n        <Form.Group>\n          <Field fluid type=\"number\" name=\"loftArea\" label={LABEL_LOFT_AREA()} defaultValue={formState.loftArea} error={formErrors.loftArea} onChange={onChange} />\n        </Form.Group>\n        <Form.Group>\n          <Field\n            fluid\n            type=\"select\"\n            name=\"loftInsulated\"\n            label={LABEL_LOFT_INSULATED()}\n            options={formatSelectOptions(YES_NO)}\n            defaultOption={toSelectOption(formState.loftInsulated)}\n            error={formErrors.loftInsulated}\n            disabled={mode === FORM_MODES.EDITION}\n            onChange={onChange}\n          />\n        </Form.Group>\n        <Form.Group>\n          <Field\n            fluid\n            type=\"select\"\n            name=\"loftInsulationPeriod\"\n            label={LABEL_LOFT_INSULATION_PERIOD()}\n            options={formatSelectOptions(INSULATION_PERIODS, { [INSULATION_PERIODS.MORE_THAN_TEN_YEARS]: 'green', [INSULATION_PERIODS.LESS_THAN_TEN_YEARS]: 'red' })}\n            defaultOption={toSelectOption(formState.loftInsulationPeriod)}\n            error={formErrors.loftInsulationPeriod}\n            disabled={mode === FORM_MODES.EDITION}\n            onChange={onChange}\n          />\n        </Form.Group>\n        <Form.Group>\n          <Field\n            fluid\n            type=\"textarea\"\n            name=\"loftComments\"\n            label={LABEL_LOFT_COMMENTS()}\n            defaultValue={formState.loftComments}\n            error={formErrors.loftComments}\n            onChange={onChange}\n          />\n        </Form.Group>\n\n        <Form.Divider />\n\n        <Form.Group>\n          <Field\n            fluid\n            type=\"select\"\n            name=\"mprBeneficiary\"\n            label={LABEL_MPR_BENEFICIARY()}\n            options={formatSelectOptions(YES_NO, { [YES_NO.YES]: 'red', [YES_NO.NO]: 'green' })}\n            defaultOption={toSelectOption(formState.mprBeneficiary)}\n            error={formErrors.mprBeneficiary}\n            disabled={mode === FORM_MODES.EDITION}\n            onChange={onChange}\n          />\n        </Form.Group>\n        <Form.Group>\n          <Field\n            fluid\n            type=\"select\"\n            name=\"oneEuroBeneficiary\"\n            label={LABEL_ONE_EURO_BENEFICIARY()}\n            options={formatSelectOptions(YES_NO, { [YES_NO.YES]: 'red', [YES_NO.NO]: 'green' })}\n            defaultOption={toSelectOption(formState.oneEuroBeneficiary)}\n            error={formErrors.oneEuroBeneficiary}\n            disabled={mode === FORM_MODES.EDITION}\n            onChange={onChange}\n          />\n        </Form.Group>\n\n        <Form.Divider />\n\n        <Form.Group>\n          <Field\n            fluid\n            type=\"text\"\n            name=\"taxNoticeNumber\"\n            index={0}\n            label={LABEL_TAX_NOTICE_NUMBER()}\n            defaultValue={formState.taxNoticeNumber}\n            error={formErrors.occupants?.['0']?.taxNoticeNumber}\n            onChange={handleOccupantChange}\n          />\n        </Form.Group>\n        <Form.Group>\n          <Field\n            fluid\n            type=\"text\"\n            name=\"taxNoticeReference\"\n            index={0}\n            label={LABEL_TAX_NOTICE_REFERENCE()}\n            defaultValue={formState.taxNoticeReference}\n            error={formErrors.occupants?.['0']?.taxNoticeReference}\n            onChange={handleOccupantChange}\n          />\n        </Form.Group>\n        <Form.Group>\n          <Field\n            fluid\n            type=\"number\"\n            name=\"referenceTaxIncome\"\n            index={0}\n            label={LABEL_REFERENCE_TAX_INCOME()}\n            defaultValue={formState.referenceTaxIncome}\n            error={formErrors.occupants?.['0']?.referenceTaxIncome}\n            onChange={handleOccupantChange}\n          />\n        </Form.Group>\n        <Form.Group>\n          <Field\n            fluid\n            type=\"date\"\n            name=\"birthDate\"\n            index={0}\n            label={LABEL_BIRTHDATE()}\n            defaultValue={formState.birthDate}\n            error={formErrors.occupants?.['0']?.birthDate}\n            onChange={handleOccupantChange}\n          />\n        </Form.Group>\n        <Form.Group>\n          <Field\n            fluid\n            type=\"number\"\n            name=\"numberOfDependents\"\n            label={LABEL_NUMBER_OF_DEPENDENTS()}\n            defaultValue={formState.numberOfDependents}\n            error={formErrors.numberOfDependents}\n            onChange={onChange}\n          />\n        </Form.Group>\n\n        <Form.Text>Si le foyer se compose de plusieurs avis d&apos;imposition</Form.Text>\n        <Form.Group>\n          <Field\n            fluid\n            type=\"number\"\n            name=\"referenceTaxIncome\"\n            index={1}\n            label={LABEL_REFERENCE_TAX_INCOME()}\n            defaultValue={formState.referenceTaxIncome}\n            error={formErrors.occupants?.['1']?.referenceTaxIncome}\n            onChange={handleOccupantChange}\n          />\n        </Form.Group>\n\n        <Form.Row radio=\"1fr 2fr\">\n          <Form.Group>\n            <Field fluid type=\"text\" name=\"streetNumber\" label={LABEL_STREET_NUMBER()} defaultValue={formState.streetNumber} error={formErrors.streetNumber} onChange={onChange} />\n          </Form.Group>\n          <Form.Group>\n            <Field fluid type=\"text\" name=\"streetName\" label={LABEL_STREET_NAME()} defaultValue={formState.streetName} error={formErrors.streetName} onChange={onChange} />\n          </Form.Group>\n        </Form.Row>\n        <Form.Row>\n          <Form.Group>\n            <Field fluid type=\"text\" name=\"city\" label={LABEL_CITY()} defaultValue={formState.city} error={formErrors.city} onChange={onChange} />\n          </Form.Group>\n          <Form.Group>\n            <Field fluid type=\"text\" name=\"postalCode\" label={LABEL_POSTAL_CODE()} defaultValue={formState.postalCode} error={formErrors.postalCode} onChange={onChange} />\n          </Form.Group>\n        </Form.Row>\n\n        <Form.Divider />\n\n        <Form.Group>\n          <Field\n            fluid\n            type=\"select\"\n            name=\"owningType\"\n            label={LABEL_OWNING_TYPE()}\n            options={formatSelectOptions(OWNING_TYPES)}\n            defaultOption={toSelectOption(formState.owningType)}\n            error={formErrors.owningType}\n            disabled={mode === FORM_MODES.EDITION}\n            onChange={onChange}\n          />\n        </Form.Group>\n        <Form.Group>\n          <Field\n            fluid\n            type=\"select\"\n            name=\"wallInsulationType\"\n            label={LABEL_WALL_INSULATION_TYPE()}\n            options={formatSelectOptions(WALL_INSULATIONS, { [WALL_INSULATIONS.ITE]: 'red', [WALL_INSULATIONS.ITI]: 'red', [WALL_INSULATIONS.NONE]: 'green' })}\n            defaultOption={toSelectOption(formState.wallInsulationType)}\n            error={formErrors.wallInsulationType}\n            disabled={mode === FORM_MODES.EDITION}\n            onChange={onChange}\n          />\n        </Form.Group>\n        <Form.Group>\n          <Field\n            fluid\n            type=\"select\"\n            name=\"heatingType\"\n            label={LABEL_HEATING_TYPE()}\n            options={formatSelectOptions(HEATING_TYPES, {\n              [HEATING_TYPES.WOOD]: 'green',\n              [HEATING_TYPES.GAS]: 'green',\n              [HEATING_TYPES.OIL]: 'green',\n              [HEATING_TYPES.HEATING_PUMP]: 'red',\n              [HEATING_TYPES.ELECTRICITY]: 'red',\n            })}\n            defaultOption={toSelectOption(formState.heatingType)}\n            error={formErrors.heatingType}\n            disabled={mode === FORM_MODES.EDITION}\n            onChange={onChange}\n          />\n        </Form.Group>\n        <Form.Group>\n          <Field\n            fluid\n            type=\"select\"\n            name=\"oilHeatingTypeBoiler\"\n            label={LABEL_OIL_HEATING_TYPE_BOILER()}\n            comment={SUB_LABEL_OIL_HEATING_TYPE_BOILER()}\n            options={formatSelectOptions(YES_NO, { [YES_NO.YES]: 'red', [YES_NO.NO]: 'green' })}\n            defaultOption={toSelectOption(formState.oilHeatingTypeBoiler)}\n            error={formErrors.oilHeatingTypeBoiler}\n            disabled={mode === FORM_MODES.EDITION}\n            onChange={onChange}\n          />\n        </Form.Group>\n        <Form.Group>\n          <Field\n            fluid\n            type=\"select\"\n            name=\"waterHeatingType\"\n            label={LABEL_WATER_HEATING_TYPE()}\n            options={formatSelectOptions(WATER_HEATING_TYPES)}\n            defaultOption={toSelectOption(formState.waterHeatingType)}\n            error={formErrors.waterHeatingType}\n            disabled={mode === FORM_MODES.EDITION}\n            onChange={onChange}\n          />\n        </Form.Group>\n        {formState.waterHeatingType === WATER_HEATING_TYPES.OTHER && (\n          <Form.Group>\n            <Field\n              fluid\n              type=\"text\"\n              name=\"waterHeatingTypeSpecified\"\n              label={LABEL_WATER_HEATING_TYPE_SPECIFIED()}\n              defaultValue={formState.waterHeatingTypeSpecified}\n              error={formErrors.waterHeatingTypeSpecified}\n              onChange={onChange}\n            />\n          </Form.Group>\n        )}\n        <Form.Group>\n          <Field\n            fluid\n            type=\"select\"\n            name=\"basementIncluded\"\n            label={LABEL_BASEMENT_INCLUDED()}\n            options={formatSelectOptions(YES_NO)}\n            defaultOption={toSelectOption(formState.basementIncluded)}\n            error={formErrors.basementIncluded}\n            disabled={mode === FORM_MODES.EDITION}\n            onChange={onChange}\n          />\n        </Form.Group>\n        <Form.Group>\n          <Field\n            fluid\n            type=\"select\"\n            name=\"lowFloorInsulationPeriod\"\n            label={LABEL_LOW_FLOOR_INSULATION_PERIOD()}\n            options={formatSelectOptions(INSULATION_PERIODS, { [INSULATION_PERIODS.MORE_THAN_TEN_YEARS]: 'green', [INSULATION_PERIODS.LESS_THAN_TEN_YEARS]: 'red' })}\n            defaultOption={toSelectOption(formState.lowFloorInsulationPeriod)}\n            error={formErrors.lowFloorInsulationPeriod}\n            disabled={mode === FORM_MODES.EDITION}\n            onChange={onChange}\n          />\n        </Form.Group>\n        <Form.Group>\n          <Field\n            fluid\n            type=\"select\"\n            name=\"basementAreaForBoiler\"\n            label={LABEL_BASEMENT_AREA_FOR_BOILER()}\n            options={formatSelectOptions(YES_NO, { [YES_NO.YES]: 'green', [YES_NO.NO]: 'red' })}\n            defaultOption={toSelectOption(formState.basementAreaForBoiler)}\n            error={formErrors.basementAreaForBoiler}\n            disabled={mode === FORM_MODES.EDITION}\n            onChange={onChange}\n          />\n        </Form.Group>\n        <Form.Group>\n          <Field\n            fluid\n            type=\"select\"\n            name=\"radiatorType\"\n            label={LABEL_RADIATOR_TYPE()}\n            options={formatSelectOptions(RADIATOR_TYPES)}\n            defaultOption={toSelectOption(formState.radiatorType)}\n            error={formErrors.radiatorType}\n            disabled={mode === FORM_MODES.EDITION}\n            onChange={onChange}\n          />\n        </Form.Group>\n        <Form.Group>\n          <Field\n            fluid\n            type=\"select\"\n            name=\"fireplaceIncluded\"\n            label={LABEL_FIREPLACE_INCLUDED()}\n            options={formatSelectOptions(YES_NO)}\n            defaultOption={toSelectOption(formState.fireplaceIncluded)}\n            error={formErrors.fireplaceIncluded}\n            disabled={mode === FORM_MODES.EDITION}\n            onChange={onChange}\n          />\n        </Form.Group>\n        <Form.Group>\n          <Field fluid type=\"tel\" name=\"phone\" label={LABEL_PHONE_NUMBER()} defaultValue={formState.phone} error={formErrors.phone} required onChange={onChange} />\n        </Form.Group>\n        <Form.Group>\n          <Field fluid type=\"textarea\" name=\"comments\" label={LABEL_COMMENTS()} defaultValue={formState.comments} error={formErrors.comments} onChange={onChange} />\n        </Form.Group>\n      </Form.Body>\n\n      <Form.Footer>\n        <Form.Group>\n          <Button disabled={requesting} colorScheme=\"secondary\" onClick={handleSubmit}>\n            {LABEL_SAVE()}\n          </Button>\n        </Form.Group>\n      </Form.Footer>\n    </Form>\n  );\n}\nSurveyForm.propTypes = formPropTypes;\n","import React, { useState, useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport { createSurvey, deleteSurvey, generateSurveyReport, getSurveys } from '../../../store/surveys/surveys.slice';\nimport { FORM_MODES } from '../../../_helpers/enums';\nimport { LABEL_DELETE, LABEL_DELETE_SURVEY, MODAL_TITLE_SURVEY } from '../../../_helpers/labels';\nimport { isNonEmptyObject } from '../../../_helpers/dataValidator.helper';\nimport formValidatorHelper from '../../../_helpers/formValidator.helper';\nimport { surveyFormFieldsDescriptor } from '../../../_helpers/form_fields_descriptors';\nimport browserHelper from '../../../_helpers/browser.helper';\nimport surveyHelper from '../../../_helpers/survey.helper';\n\nimport { Divider, HomeContainer } from '../../helpers';\nimport SurveysStyled from './Surveys.styled';\nimport SurveysHeader from './core/SurveysHeader';\nimport SurveysBody from './core/SurveysBody';\nimport useDisclosure from '../../hooks/useDisclosure';\nimport useForm from '../../hooks/useForm';\nimport { Button, Modal } from '../../library';\nimport useAlert from '../../hooks/useAlert';\nimport SurveyForm from './core/SurveyForm';\n\nfunction Surveys() {\n  const dispatch = useDispatch();\n  const { surveys, requesting } = useSelector((state) => state.core.surveysState);\n  const { profile } = useSelector((state) => state.core.authState);\n  const surveyModal = useDisclosure();\n  const surveyForm = useForm();\n  const { showAlert, hideAlert } = useAlert();\n  const [selectedSurvey, setSelectedSurvey] = useState({});\n\n  useEffect(() => {\n    dispatch(getSurveys());\n  }, [dispatch]);\n\n  function handleCreateSurvey() {\n    setSelectedSurvey({});\n    openSurveyModal({}, { mode: FORM_MODES.CREATION });\n  }\n\n  function openSurveyModal(survey = {}, { mode } = {}) {\n    surveyForm.setMode(mode);\n    surveyForm.resetFormState(survey);\n    surveyModal.handleShow();\n  }\n\n  function handlePrintSurvey(survey) {\n    browserHelper.openUrlInNewTab(survey.fileUrl);\n  }\n\n  function handleGenerateSurveyReport(survey) {\n    dispatch(generateSurveyReport({ surveyId: survey.id }));\n  }\n\n  function handleDeleteSurvey(survey) {\n    showAlert({\n      message: LABEL_DELETE_SURVEY({ survey }),\n      actions: (\n        <Button colorScheme=\"red\" onClick={() => processDeleteSurvey(survey)}>\n          {LABEL_DELETE()}\n        </Button>\n      ),\n    });\n  }\n\n  function handleSubmit() {\n    if (isNonEmptyObject(selectedSurvey)) return;\n    processCreateSurvey();\n  }\n\n  function processCreateSurvey() {\n    const { formState } = surveyForm;\n    const { validForm, formErrors } = formValidatorHelper.validateForm(formState, surveyFormFieldsDescriptor());\n    surveyForm.setFormErrors(formErrors);\n    if (validForm) dispatch(createSurvey({ formState, onSurveyCreated: surveyModal.handleHide }));\n  }\n\n  function processDeleteSurvey(survey) {\n    hideAlert();\n    dispatch(deleteSurvey({ surveyId: survey.id }));\n  }\n\n  return (\n    <HomeContainer>\n      <div className=\"bodyBox\">\n        <SurveysStyled>\n          <SurveysHeader surveys={surveys} profile={profile} onOpenCreateSurveyForm={handleCreateSurvey} />\n\n          <Divider />\n\n          <SurveysBody\n            surveys={surveyHelper.formatSurveysForTable(surveys)}\n            requesting={requesting}\n            profile={profile}\n            onPrintSurvey={handlePrintSurvey}\n            onGenerateSurveyReport={handleGenerateSurveyReport}\n            onDeleteSurvey={handleDeleteSurvey}\n          />\n        </SurveysStyled>\n      </div>\n      {surveyModal.shown && (\n        <Modal shown title={MODAL_TITLE_SURVEY()} onHide={surveyModal.handleHide}>\n          <SurveyForm mode={surveyForm.mode} formState={surveyForm.formState} formErrors={surveyForm.formErrors} onChange={surveyForm.handleChange} onSubmit={handleSubmit} />\n        </Modal>\n      )}\n    </HomeContainer>\n  );\n}\n\nexport default Surveys;\n","import { isNullishOrEmpty, isValidEmail, isValidPhone } from './dataValidator.helper';\n\nfunction validateForm(formState = {}, formFields = [], { currentIndex } = {}) {\n  return formFields.reduce(\n    ({ validForm, formErrors }, { property, label, type, fields, validate, required, minLength = 0, ...restProps }) => {\n      const value = formState[property];\n      if (type === 'array') {\n        const arrayValue = value || [Array(minLength).fill({})];\n        arrayValue.forEach((item, index) => {\n          const fieldValidationResult = validateForm(item, fields, { currentIndex: index });\n          validForm = validForm && fieldValidationResult.validForm;\n          if (!validForm) {\n            if (!formErrors[property]) formErrors[property] = {};\n            formErrors[property][index] = fieldValidationResult.formErrors;\n          }\n        });\n      } else {\n        const { validField, errorMessageSuffix } = validateFieldValue(value, { type, required, currentIndex, ...restProps }, formState);\n        validForm = validForm && validField;\n        if (!validField) formErrors[property] = label.concat(errorMessageSuffix);\n      }\n      if (validate) {\n        validForm = validForm && validate(formState, formErrors);\n      }\n\n      return { validForm, formErrors };\n    },\n    { validForm: true, formErrors: {} }\n  );\n}\n\nfunction validateFieldValue(value, field = {}, formState) {\n  const fieldValidation = { validField: true, errorMessageSuffix: '' };\n  const { type, dataType, pattern, required = false, currentIndex } = field;\n\n  validateValueRequirement({ value, required, currentIndex }, fieldValidation, formState);\n  if (!fieldValidation.validField || isNullishOrEmpty(value)) return fieldValidation;\n\n  if (type) validateValueType(value, type, fieldValidation);\n  if (dataType) validateValueDataType(value, dataType, fieldValidation);\n  if (pattern) validateValuePattern(value, pattern, fieldValidation);\n\n  return fieldValidation;\n}\n\nfunction validateValueRequirement({ value, required, currentIndex }, fieldValidation, formState) {\n  const valueRequired = typeof required === 'function' ? required({ ...formState, currentIndex }) : required;\n  if (valueRequired && isNullishOrEmpty(value)) {\n    fieldValidation.validField = false;\n    fieldValidation.errorMessageSuffix = ' obligatoire';\n  }\n}\n\nfunction validateValueType(value, type, fieldValidation) {\n  if (typeof value !== type) {\n    fieldValidation.validField = false;\n    fieldValidation.errorMessageSuffix = ' non valide';\n  }\n}\n\nfunction validateValueDataType(value, dataType, fieldValidation) {\n  const dataTypeValidationStrategies = { email: isValidEmail, phone: isValidPhone };\n  if (!dataType || !Object.keys(dataTypeValidationStrategies).includes(dataType)) return;\n  if (!dataTypeValidationStrategies[dataType](value)) {\n    fieldValidation.validField = false;\n    fieldValidation.errorMessageSuffix = ' non valide';\n  }\n}\n\nfunction validateValuePattern(value, pattern, fieldValidation) {\n  if (pattern && !pattern.test(value)) {\n    fieldValidation.validField = false;\n    fieldValidation.errorMessageSuffix = ' est non valide';\n  }\n}\n\nfunction extractFormStateUpdates(source = {}, formState = {}) {\n  const updates = {};\n  Object.keys(formState).forEach((property) => {\n    if (JSON.stringify(formState[property]) !== JSON.stringify(source[property])) {\n      updates[property] = formState[property];\n    }\n  });\n\n  return updates;\n}\n\nexport default { validateForm, extractFormStateUpdates };\n","import { useState, useCallback } from 'react';\nimport { cloneObject } from '../../_helpers/types.helper';\n\nexport default function ({ onSubmit } = {}) {\n  const [formState, setFormState] = useState({});\n  const [formErrors, setFormErrors] = useState({});\n  const [formDisabledFields, setFormDisabledFields] = useState([]);\n  const [mode, setMode] = useState('');\n\n  const handleChange = useCallback(({ name, value }) => {\n    setFormState((currentFormState) => ({\n      ...currentFormState,\n      [name]: value,\n    }));\n    setFormErrors((currentFormErrors) => {\n      if (currentFormErrors[name]) {\n        const clone = cloneObject(currentFormErrors);\n        delete clone[name];\n\n        return clone;\n      }\n\n      return currentFormErrors;\n    });\n  });\n\n  const handleSubmit = useCallback((evt) => {\n    if (evt) evt.preventDefault();\n    onSubmit(evt);\n  }, []);\n\n  const updateFormState = useCallback((formStateUpdates = {}) => {\n    const clonedStateUpdates = { ...formStateUpdates };\n    const fieldsToDelete = ['id', 'created', 'updated', 'deleted', 'deletedAt'];\n    fieldsToDelete.forEach((field) => delete clonedStateUpdates[field]);\n    setFormState((currentFormState) => ({ ...currentFormState, ...clonedStateUpdates }));\n  }, []);\n\n  const resetFormState = useCallback((formStateUpdates = {}) => {\n    setFormState(formStateUpdates);\n    setFormErrors({});\n  }, []);\n\n  return {\n    formState,\n    formErrors,\n    formDisabledFields,\n    mode,\n    setFormErrors,\n    setFormDisabledFields,\n    handleChange,\n    handleSubmit,\n    updateFormState,\n    resetFormState,\n    setMode,\n  };\n}\n","import { LANGUAGES } from '../enums';\nimport { LABEL_EMAIL, LABEL_PASSWORD } from '../labels';\n\nexport default function ({ language = LANGUAGES.FR } = {}) {\n  return [\n    {\n      property: 'email',\n      type: 'string',\n      label: LABEL_EMAIL({ language }),\n      required: true,\n    },\n    {\n      property: 'password',\n      type: 'string',\n      label: LABEL_PASSWORD({ language }),\n      required: true,\n    },\n  ];\n}\n","import { HEATING_TYPES, LANGUAGES } from '../enums';\nimport {\n  LABEL_BASEMENT_AREA_FOR_BOILER,\n  LABEL_BASEMENT_INCLUDED,\n  LABEL_BIRTHDATE,\n  LABEL_BUILDING_AGE,\n  LABEL_CITY,\n  LABEL_COMMENTS,\n  LABEL_FIREPLACE_INCLUDED,\n  LABEL_FULL_NAME,\n  LABEL_HEATING_TYPE,\n  LABEL_LIVING_SPACE_AREA,\n  LABEL_LOFT_AREA,\n  LABEL_LOFT_COMMENTS,\n  LABEL_LOFT_INCLUDED,\n  LABEL_LOFT_INSULATED,\n  LABEL_LOFT_INSULATION_PERIOD,\n  LABEL_LOFT_TYPE,\n  LABEL_LOW_FLOOR_INSULATION_PERIOD,\n  LABEL_MPR_BENEFICIARY,\n  LABEL_NUMBER_OF_DEPENDENTS,\n  LABEL_OIL_HEATING_TYPE_BOILER,\n  LABEL_ONE_EURO_BENEFICIARY,\n  LABEL_OPERATION_TYPE,\n  LABEL_OWNING_TYPE,\n  LABEL_PHONE_NUMBER,\n  LABEL_POSTAL_CODE,\n  LABEL_RADIATOR_TYPE,\n  LABEL_REFERENCE_TAX_INCOME,\n  LABEL_STREET_NAME,\n  LABEL_STREET_NUMBER,\n  LABEL_TAX_NOTICE_NUMBER,\n  LABEL_TAX_NOTICE_REFERENCE,\n  LABEL_WALL_INSULATION_TYPE,\n  LABEL_WATER_HEATING_TYPE,\n  LABEL_WATER_HEATING_TYPE_SPECIFIED,\n} from '../labels';\n\nexport default function ({ language = LANGUAGES.FR } = {}) {\n  return [\n    {\n      property: 'operationType',\n      type: 'string',\n      label: LABEL_OPERATION_TYPE({ language }),\n      required: true,\n    },\n    {\n      property: 'fullName',\n      type: 'string',\n      label: LABEL_FULL_NAME({ language }),\n      required: true,\n    },\n    {\n      property: 'buildingAge',\n      type: 'string',\n      label: LABEL_BUILDING_AGE({ language }),\n      required: true,\n    },\n    {\n      property: 'livingSpaceArea',\n      type: 'number',\n      label: LABEL_LIVING_SPACE_AREA({ language }),\n      required: true,\n    },\n    {\n      property: 'loftIncluded',\n      type: 'boolean',\n      label: LABEL_LOFT_INCLUDED({ language }),\n      required: true,\n    },\n    {\n      property: 'loftType',\n      type: 'string',\n      label: LABEL_LOFT_TYPE({ language }),\n      required({ loftIncluded }) {\n        return loftIncluded;\n      },\n    },\n    {\n      property: 'loftArea',\n      type: 'number',\n      label: LABEL_LOFT_AREA({ language }),\n      required({ loftIncluded }) {\n        return loftIncluded;\n      },\n    },\n    {\n      property: 'loftInsulated',\n      type: 'boolean',\n      label: LABEL_LOFT_INSULATED({ language }),\n      required({ loftIncluded }) {\n        return loftIncluded;\n      },\n    },\n    {\n      property: 'loftInsulationPeriod',\n      type: 'string',\n      label: LABEL_LOFT_INSULATION_PERIOD({ language }),\n      required({ loftInsulated }) {\n        return loftInsulated;\n      },\n    },\n    {\n      property: 'loftComments',\n      type: 'string',\n      label: LABEL_LOFT_COMMENTS({ language }),\n    },\n    {\n      property: 'mprBeneficiary',\n      type: 'boolean',\n      label: LABEL_MPR_BENEFICIARY({ language }),\n      required: true,\n    },\n    {\n      property: 'oneEuroBeneficiary',\n      type: 'boolean',\n      label: LABEL_ONE_EURO_BENEFICIARY({ language }),\n      required: true,\n    },\n    {\n      property: 'occupants',\n      type: 'array',\n      required: true,\n      minLength: 1,\n      fields: [\n        {\n          property: 'taxNoticeNumber',\n          type: 'string',\n          label: LABEL_TAX_NOTICE_NUMBER({ language }),\n          required({ currentIndex }) {\n            return currentIndex === 0;\n          },\n        },\n        {\n          property: 'taxNoticeReference',\n          type: 'string',\n          label: LABEL_TAX_NOTICE_REFERENCE({ language }),\n          required({ currentIndex }) {\n            return currentIndex === 0;\n          },\n        },\n        {\n          property: 'referenceTaxIncome',\n          type: 'number',\n          label: LABEL_REFERENCE_TAX_INCOME({ language }),\n          required({ currentIndex }) {\n            return currentIndex === 0;\n          },\n        },\n        {\n          property: 'birthDate',\n          type: 'object',\n          label: LABEL_BIRTHDATE({ language }),\n          required({ currentIndex }) {\n            return currentIndex === 0;\n          },\n        },\n      ],\n    },\n    {\n      property: 'numberOfDependents',\n      type: 'number',\n      label: LABEL_NUMBER_OF_DEPENDENTS({ language }),\n      required: true,\n    },\n    {\n      property: 'streetNumber',\n      type: 'string',\n      label: LABEL_STREET_NUMBER({ language }),\n      required: true,\n    },\n    {\n      property: 'streetName',\n      type: 'string',\n      label: LABEL_STREET_NAME({ language }),\n      required: true,\n    },\n    {\n      property: 'city',\n      type: 'string',\n      label: LABEL_CITY({ language }),\n      required: true,\n    },\n    {\n      property: 'postalCode',\n      type: 'string',\n      label: LABEL_POSTAL_CODE({ language }),\n      required: true,\n    },\n    {\n      property: 'owningType',\n      type: 'string',\n      label: LABEL_OWNING_TYPE({ language }),\n      required: true,\n    },\n    {\n      property: 'wallInsulationType',\n      type: 'string',\n      label: LABEL_WALL_INSULATION_TYPE({ language }),\n      required: true,\n    },\n    {\n      property: 'heatingType',\n      type: 'string',\n      label: LABEL_HEATING_TYPE({ language }),\n      required: true,\n    },\n    {\n      property: 'oilHeatingTypeBoiler',\n      type: 'boolean',\n      label: LABEL_OIL_HEATING_TYPE_BOILER({ language }),\n      required({ heatingType }) {\n        return heatingType === HEATING_TYPES.GAS;\n      },\n    },\n    {\n      property: 'waterHeatingType',\n      type: 'string',\n      label: LABEL_WATER_HEATING_TYPE({ language }),\n      required: true,\n    },\n    {\n      property: 'waterHeatingTypeSpecified',\n      type: 'string',\n      label: LABEL_WATER_HEATING_TYPE_SPECIFIED({ language }),\n    },\n    {\n      property: 'basementIncluded',\n      type: 'boolean',\n      label: LABEL_BASEMENT_INCLUDED({ language }),\n      required: true,\n    },\n    {\n      property: 'lowFloorInsulationPeriod',\n      type: 'string',\n      label: LABEL_LOW_FLOOR_INSULATION_PERIOD({ language }),\n      required({ basementIncluded }) {\n        return basementIncluded;\n      },\n    },\n    {\n      property: 'basementAreaForBoiler',\n      type: 'boolean',\n      label: LABEL_BASEMENT_AREA_FOR_BOILER({ language }),\n      required({ basementIncluded }) {\n        return basementIncluded;\n      },\n    },\n    {\n      property: 'radiatorType',\n      type: 'string',\n      label: LABEL_RADIATOR_TYPE({ language }),\n    },\n    {\n      property: 'fireplaceIncluded',\n      type: 'boolean',\n      label: LABEL_FIREPLACE_INCLUDED({ language }),\n      required: true,\n    },\n    {\n      property: 'phone',\n      type: 'string',\n      dataType: 'phone',\n      label: LABEL_PHONE_NUMBER({ language }),\n      required: true,\n    },\n    {\n      property: 'comments',\n      type: 'string',\n      label: LABEL_COMMENTS({ language }),\n    },\n  ];\n}\n","import { isNonEmptyString } from '../dataValidator.helper';\nimport { LANGUAGES } from '../enums';\nimport { LABEL_CONFIRM_PASSWORD, LABEL_EMAIL, LABEL_FIRST_NAME, LABEL_LAST_NAME, LABEL_PASSWORD, LABEL_PASSWORDS_ARE_DIFFERENT, LABEL_ROLE } from '../labels';\n\nexport default function ({ language = LANGUAGES.FR } = {}) {\n  return [\n    {\n      property: 'lastName',\n      type: 'string',\n      label: LABEL_LAST_NAME({ language }),\n      required: true,\n    },\n    {\n      property: 'firstName',\n      type: 'string',\n      label: LABEL_FIRST_NAME({ language }),\n      required: true,\n    },\n    {\n      property: 'role',\n      type: 'string',\n      label: LABEL_ROLE({ language }),\n      required: true,\n    },\n    {\n      property: 'email',\n      type: 'string',\n      dataType: 'email',\n      label: LABEL_EMAIL({ language }),\n      required: true,\n    },\n    {\n      property: 'password',\n      type: 'string',\n      label: LABEL_PASSWORD({ language }),\n      required: true,\n    },\n    {\n      property: 'confirmPassword',\n      type: 'string',\n      label: LABEL_CONFIRM_PASSWORD({ language }),\n      required: true,\n      validate({ password, confirmPassword }, formErrors = {}) {\n        const samePasswords = isNonEmptyString(password) && isNonEmptyString(confirmPassword) && password === confirmPassword;\n        if (!samePasswords) formErrors.confirmPassword = LABEL_PASSWORDS_ARE_DIFFERENT({ language });\n\n        return samePasswords;\n      },\n    },\n  ];\n}\n","import { useCallback, useState } from 'react';\n\nexport default function ({ initialTitle = '' } = {}) {\n  const [shown, setShown] = useState(false);\n  const [title, setTitle] = useState(initialTitle);\n\n  const handleShow = useCallback(() => {\n    setShown(true);\n  }, []);\n\n  const handleHide = useCallback(() => {\n    setShown(false);\n  }, []);\n\n  return {\n    shown,\n    title,\n    setTitle,\n    handleShow,\n    handleHide,\n  };\n}\n"],"sourceRoot":""}