{"version":3,"sources":["_helpers/account.helper.js","components/pages/accounts/Accounts.styled.js","components/pages/accounts/core/AccountsHeader.js","components/pages/accounts/core/AccountsBody.js","components/pages/accounts/core/AccountForm.js","components/pages/accounts/Accounts.js","_helpers/formValidator.helper.js","components/hooks/useForm.js","_helpers/form_fields_descriptors/signInForm.js","_helpers/form_fields_descriptors/surveyForm.js","_helpers/form_fields_descriptors/accountForm.js","components/hooks/useDisclosure.js"],"names":["translateRole","role","_ROLES$ADMINISTRATOR$","_defineProperty","ROLES","ADMINISTRATOR","OPERATOR","getRoleColorScheme","_ROLES$ADMINISTRATOR$2","formatAccountsForTable","accounts","profile","isNullishOrEmpty","filter","account","id","styled","div","_templateObject","_taggedTemplateLiteral","AccountsHeader","_ref","_ref$accounts","onOpenCreateAccountForm","_jsx","_Fragment","children","_jsxs","MainCard","Header","Stack","orientation","spacing","justify","Text","Title","LABELS_ACCOUNTS","Button","onClick","LABEL_CREATE_ACCOUNT","Body","Statistic","variant","label","LABEL_TOTAL","value","length","AccountsBody","_ref$requesting","requesting","onDeleteAccount","Card","Table","columns","title","LABEL_FULL_NAME","key","dataIndex","sortable","LABEL_CREATED_AT","dataType","LABEL_EMAIL","LABEL_ROLE","formatter","accountHelper","render","_ref2","Badge","colorScheme","noDataMessage","LABEL_NO_ACCOUNTS","dataSource","actions","icon","Icon","name","LABEL_MENU_ACTION_DELETE","AccountForm","mode","formState","formErrors","onChange","onSubmit","useDispatch","state","ui","Form","Group","Field","fluid","type","LABEL_LAST_NAME","defaultValue","lastName","error","LABEL_FIRST_NAME","firstName","LABEL_SELECT_ROLE","options","formatSelectOptions","defaultOption","toSelectOption","disabled","FORM_MODES","EDITION","email","LABEL_PASSWORD","password","LABEL_CONFIRM_PASSWORD","confirmPassword","Footer","LABEL_SAVE","Accounts","dispatch","_useSelector","useSelector","core","accountsState","authState","accountModal","useDisclosure","accountForm","useForm","_useAlert","useAlert","showAlert","hideAlert","_useState","useState","_useState2","_slicedToArray","selectedAccount","setSelectedAccount","useEffect","getAccounts","HomeContainer","AccountsStyled","arguments","undefined","setMode","resetFormState","handleShow","openAccountModal","CREATION","Divider","message","LABEL_DELETE_ACCOUNT","deleteAccount","accountId","processDeleteAccount","LABEL_DELETE","shown","Modal","MODAL_TITLE_SURVEY","onHide","handleHide","handleChange","isNonEmptyObject","_formValidatorHelper$","formValidatorHelper","validateForm","accountFormFieldsDescriptor","validForm","setFormErrors","createAccount","_objectSpread","deletable","onAccountCreated","processCreateAccount","formFields","currentIndex","reduce","_ref3","property","fields","validate","required","_ref3$minLength","minLength","restProps","_objectWithoutProperties","_excluded","Array","fill","forEach","item","index","fieldValidationResult","_validateFieldValue","field","fieldValidation","validField","errorMessageSuffix","pattern","_field$required","_ref4","valueRequired","validateValueRequirement","validateValueType","dataTypeValidationStrategies","isValidEmail","phone","isValidPhone","Object","keys","includes","validateValueDataType","test","validateValuePattern","validateFieldValue","concat","extractFormStateUpdates","source","updates","JSON","stringify","setFormState","_useState3","_useState4","_useState5","_useState6","formDisabledFields","setFormDisabledFields","_useState7","_useState8","useCallback","currentFormState","currentFormErrors","clone","cloneObject","handleSubmit","evt","preventDefault","updateFormState","formStateUpdates","clonedStateUpdates","_ref$language","language","LANGUAGES","FR","LABEL_OPERATION_TYPE","LABEL_BUILDING_AGE","LABEL_LIVING_SPACE_AREA","LABEL_LOFT_INCLUDED","LABEL_LOFT_TYPE","loftIncluded","LABEL_LOFT_AREA","LABEL_LOFT_INSULATED","LABEL_LOFT_INSULATION_PERIOD","_ref5","loftInsulated","LABEL_LOFT_COMMENTS","LABEL_MPR_BENEFICIARY","LABEL_ONE_EURO_BENEFICIARY","LABEL_TAX_NOTICE_NUMBER","_ref6","LABEL_TAX_NOTICE_REFERENCE","_ref7","LABEL_REFERENCE_TAX_INCOME","_ref8","LABEL_BIRTHDATE","_ref9","LABEL_NUMBER_OF_DEPENDENTS","LABEL_STREET_NUMBER","LABEL_STREET_NAME","LABEL_CITY","LABEL_POSTAL_CODE","LABEL_OWNING_TYPE","LABEL_WALL_INSULATION_TYPE","LABEL_HEATING_TYPE","LABEL_OIL_HEATING_TYPE_BOILER","_ref10","heatingType","HEATING_TYPES","GAS","LABEL_WATER_HEATING_TYPE","LABEL_WATER_HEATING_TYPE_SPECIFIED","LABEL_BASEMENT_INCLUDED","LABEL_LOW_FLOOR_INSULATION_PERIOD","_ref11","basementIncluded","LABEL_BASEMENT_AREA_FOR_BOILER","_ref12","LABEL_RADIATOR_TYPE","LABEL_FIREPLACE_INCLUDED","LABEL_PHONE_NUMBER","LABEL_COMMENTS","samePasswords","isNonEmptyString","LABEL_PASSWORDS_ARE_DIFFERENT","_ref$initialTitle","initialTitle","setShown","setTitle"],"mappings":"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","file":"static/js/5.14d23f0d.chunk.js","sourcesContent":["import { isNullishOrEmpty } from './dataValidator.helper';\nimport { ROLES } from './enums';\n\nfunction translateRole(role) {\n  return { [ROLES.ADMINISTRATOR]: 'Administrateur', [ROLES.OPERATOR]: 'Opérateur' }[role];\n}\n\nfunction getRoleColorScheme(role) {\n  return { [ROLES.ADMINISTRATOR]: 'green', [ROLES.OPERATOR]: 'gray' }[role];\n}\n\nfunction formatAccountsForTable(accounts, profile) {\n  if (isNullishOrEmpty(profile) || isNullishOrEmpty(accounts)) return accounts;\n\n  return accounts.filter((account) => account.id !== profile.id);\n}\n\nexport default { translateRole, getRoleColorScheme, formatAccountsForTable };\n","import styled from 'styled-components';\n\nexport default styled.div``;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport { LABELS_ACCOUNTS, LABEL_CREATE_ACCOUNT, LABEL_TOTAL } from '../../../../_helpers/labels';\n\nimport { Button, MainCard, Stack, Statistic, Text } from '../../../library';\n\nexport default function AccountsHeader({ accounts = [], onOpenCreateAccountForm }) {\n  return (\n    <>\n      <MainCard>\n        <MainCard.Header>\n          <Stack orientation=\"horizontal\" spacing={1} justify=\"space-between\">\n            <Text.Title>{LABELS_ACCOUNTS()}</Text.Title>\n            <Button onClick={onOpenCreateAccountForm}>{LABEL_CREATE_ACCOUNT()}</Button>\n          </Stack>\n        </MainCard.Header>\n        <MainCard.Body>\n          <Stack spacing={1.5}>\n            <Statistic variant=\"default\" label={LABEL_TOTAL()} value={accounts.length} />\n          </Stack>\n        </MainCard.Body>\n      </MainCard>\n    </>\n  );\n}\nAccountsHeader.propTypes = {\n  accounts: PropTypes.arrayOf(PropTypes.shape({})),\n  onOpenCreateAccountForm: PropTypes.func.isRequired,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport accountHelper from '../../../../_helpers/account.helper';\nimport { LABEL_CREATED_AT, LABEL_EMAIL, LABEL_FULL_NAME, LABEL_MENU_ACTION_DELETE, LABEL_NO_ACCOUNTS, LABEL_ROLE } from '../../../../_helpers/labels';\n\nimport { Badge, Card, Icon, Table } from '../../../library';\n\nexport default function AccountsBody({ accounts = [], requesting = false, onDeleteAccount }) {\n  return (\n    <Card>\n      <Table\n        columns={[\n          {\n            title: LABEL_FULL_NAME(),\n            key: 'fullName',\n            dataIndex: 'fullName',\n            sortable: true,\n          },\n          {\n            title: LABEL_CREATED_AT(),\n            key: 'createdAt',\n            dataIndex: 'createdAt',\n            dataType: 'date',\n            sortable: true,\n          },\n          {\n            title: LABEL_EMAIL(),\n            key: 'email',\n            dataIndex: 'email',\n          },\n          {\n            title: LABEL_ROLE(),\n            key: 'role',\n            dataIndex: 'role',\n            sortable: true,\n            formatter: accountHelper.translateRole,\n            render: ({ role }) => <Badge colorScheme={accountHelper.getRoleColorScheme(role)}>{accountHelper.translateRole(role)}</Badge>,\n          },\n        ]}\n        noDataMessage={LABEL_NO_ACCOUNTS()}\n        dataSource={accounts}\n        requesting={requesting}\n        actions={[{ icon: <Icon name=\"delete\" />, label: LABEL_MENU_ACTION_DELETE(), onClick: onDeleteAccount }]}\n      />\n    </Card>\n  );\n}\nAccountsBody.propTypes = {\n  accounts: PropTypes.arrayOf(PropTypes.shape({})),\n  requesting: PropTypes.bool,\n  onDeleteAccount: PropTypes.func.isRequired,\n};\n","import React from 'react';\nimport { useDispatch } from 'react-redux';\n\nimport { FORM_MODES, ROLES } from '../../../../_helpers/enums';\nimport { LABEL_CONFIRM_PASSWORD, LABEL_EMAIL, LABEL_FIRST_NAME, LABEL_LAST_NAME, LABEL_PASSWORD, LABEL_SAVE, LABEL_SELECT_ROLE } from '../../../../_helpers/labels';\nimport { formPropTypes } from '../../../../_helpers/propTypes.schemas';\nimport { formatSelectOptions, toSelectOption } from '../../../../_helpers/library.helper';\n\nimport { Form } from '../../../helpers';\nimport { Button, Field } from '../../../library';\n\nexport default function AccountForm({ mode, formState, formErrors, onChange, onSubmit }) {\n  const { requesting } = useDispatch((state) => state.ui.formState);\n\n  function handleSubmit() {\n    if (requesting) return;\n    onSubmit();\n  }\n\n  return (\n    <Form>\n      <Form.Body>\n        <Form.Group>\n          <Field fluid type=\"text\" name=\"lastName\" label={LABEL_LAST_NAME()} defaultValue={formState.lastName} error={formErrors.lastName} onChange={onChange} />\n        </Form.Group>\n        <Form.Group>\n          <Field fluid type=\"text\" name=\"firstName\" label={LABEL_FIRST_NAME()} defaultValue={formState.firstName} error={formErrors.firstName} onChange={onChange} />\n        </Form.Group>\n        <Form.Group>\n          <Field\n            fluid\n            type=\"select\"\n            name=\"role\"\n            label={LABEL_SELECT_ROLE()}\n            options={formatSelectOptions(ROLES)}\n            defaultOption={toSelectOption(formState.role)}\n            error={formErrors.role}\n            disabled={mode === FORM_MODES.EDITION}\n            onChange={onChange}\n          />\n        </Form.Group>\n        <Form.Group>\n          <Field fluid type=\"email\" name=\"email\" label={LABEL_EMAIL()} defaultValue={formState.email} error={formErrors.email} onChange={onChange} />\n        </Form.Group>\n        <Form.Group>\n          <Field fluid type=\"password\" name=\"password\" label={LABEL_PASSWORD()} defaultValue={formState.password} error={formErrors.password} onChange={onChange} />\n        </Form.Group>\n        <Form.Group>\n          <Field\n            fluid\n            type=\"password\"\n            name=\"confirmPassword\"\n            label={LABEL_CONFIRM_PASSWORD()}\n            defaultValue={formState.confirmPassword}\n            error={formErrors.confirmPassword}\n            onChange={onChange}\n          />\n        </Form.Group>\n      </Form.Body>\n\n      <Form.Footer>\n        <Form.Group>\n          <Button disabled={requesting} colorScheme=\"secondary\" onClick={handleSubmit}>\n            {LABEL_SAVE()}\n          </Button>\n        </Form.Group>\n      </Form.Footer>\n    </Form>\n  );\n}\nAccountForm.propTypes = formPropTypes;\n","import React, { useState, useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport { createAccount, deleteAccount, getAccounts } from '../../../store/accounts/accounts.slice';\nimport { FORM_MODES } from '../../../_helpers/enums';\nimport { LABEL_DELETE, LABEL_DELETE_ACCOUNT, MODAL_TITLE_SURVEY } from '../../../_helpers/labels';\nimport { isNonEmptyObject } from '../../../_helpers/dataValidator.helper';\nimport formValidatorHelper from '../../../_helpers/formValidator.helper';\nimport { accountFormFieldsDescriptor } from '../../../_helpers/form_fields_descriptors';\nimport accountHelper from '../../../_helpers/account.helper';\n\nimport { Divider, HomeContainer } from '../../helpers';\nimport AccountsStyled from './Accounts.styled';\nimport AccountsHeader from './core/AccountsHeader';\nimport AccountsBody from './core/AccountsBody';\nimport useDisclosure from '../../hooks/useDisclosure';\nimport useForm from '../../hooks/useForm';\nimport { Button, Modal } from '../../library';\nimport AccountForm from './core/AccountForm';\nimport useAlert from '../../hooks/useAlert';\n\nfunction Accounts() {\n  const dispatch = useDispatch();\n  const { accounts, requesting } = useSelector((state) => state.core.accountsState);\n  const { profile } = useSelector((state) => state.core.authState);\n  const accountModal = useDisclosure();\n  const accountForm = useForm();\n  const { showAlert, hideAlert } = useAlert();\n  const [selectedAccount, setSelectedAccount] = useState({});\n\n  useEffect(() => {\n    dispatch(getAccounts());\n  }, [dispatch]);\n\n  function handleCreateAccount() {\n    setSelectedAccount({});\n    openAccountModal({}, { mode: FORM_MODES.CREATION });\n  }\n\n  function openAccountModal(account = {}, { mode } = {}) {\n    accountForm.setMode(mode);\n    accountForm.resetFormState(account);\n    accountModal.handleShow();\n  }\n\n  function handleDeleteAccount(account) {\n    showAlert({\n      message: LABEL_DELETE_ACCOUNT({ account }),\n      actions: (\n        <Button colorScheme=\"red\" onClick={() => processDeleteAccount(account)}>\n          {LABEL_DELETE()}\n        </Button>\n      ),\n    });\n  }\n\n  function handleSubmit() {\n    if (isNonEmptyObject(selectedAccount)) return;\n    processCreateAccount();\n  }\n\n  function processCreateAccount() {\n    const { formState } = accountForm;\n    const { validForm, formErrors } = formValidatorHelper.validateForm(formState, accountFormFieldsDescriptor());\n    accountForm.setFormErrors(formErrors);\n    if (validForm) dispatch(createAccount({ formState: { ...formState, deletable: true }, onAccountCreated: accountModal.handleHide }));\n  }\n\n  function processDeleteAccount(account) {\n    hideAlert();\n    dispatch(deleteAccount({ accountId: account.id }));\n  }\n\n  return (\n    <HomeContainer>\n      <AccountsStyled>\n        <AccountsHeader accounts={accounts} onOpenCreateAccountForm={handleCreateAccount} />\n\n        <Divider />\n\n        <AccountsBody accounts={accountHelper.formatAccountsForTable(accounts, profile)} requesting={requesting} onDeleteAccount={handleDeleteAccount} />\n      </AccountsStyled>\n\n      {accountModal.shown && (\n        <Modal shown title={MODAL_TITLE_SURVEY()} onHide={accountModal.handleHide}>\n          <AccountForm mode={accountForm.mode} formState={accountForm.formState} formErrors={accountForm.formErrors} onChange={accountForm.handleChange} onSubmit={handleSubmit} />\n        </Modal>\n      )}\n    </HomeContainer>\n  );\n}\n\nexport default Accounts;\n","import { isNullishOrEmpty, isValidEmail, isValidPhone } from './dataValidator.helper';\n\nfunction validateForm(formState = {}, formFields = [], { currentIndex } = {}) {\n  return formFields.reduce(\n    ({ validForm, formErrors }, { property, label, type, fields, validate, required, minLength = 0, ...restProps }) => {\n      const value = formState[property];\n      if (type === 'array') {\n        const arrayValue = value || [Array(minLength).fill({})];\n        arrayValue.forEach((item, index) => {\n          const fieldValidationResult = validateForm(item, fields, { currentIndex: index });\n          validForm = validForm && fieldValidationResult.validForm;\n          if (!validForm) {\n            if (!formErrors[property]) formErrors[property] = {};\n            formErrors[property][index] = fieldValidationResult.formErrors;\n          }\n        });\n      } else {\n        const { validField, errorMessageSuffix } = validateFieldValue(value, { type, required, currentIndex, ...restProps }, formState);\n        validForm = validForm && validField;\n        if (!validField) formErrors[property] = label.concat(errorMessageSuffix);\n      }\n      if (validate) {\n        validForm = validForm && validate(formState, formErrors);\n      }\n\n      return { validForm, formErrors };\n    },\n    { validForm: true, formErrors: {} }\n  );\n}\n\nfunction validateFieldValue(value, field = {}, formState) {\n  const fieldValidation = { validField: true, errorMessageSuffix: '' };\n  const { type, dataType, pattern, required = false, currentIndex } = field;\n\n  validateValueRequirement({ value, required, currentIndex }, fieldValidation, formState);\n  if (!fieldValidation.validField || isNullishOrEmpty(value)) return fieldValidation;\n\n  if (type) validateValueType(value, type, fieldValidation);\n  if (dataType) validateValueDataType(value, dataType, fieldValidation);\n  if (pattern) validateValuePattern(value, pattern, fieldValidation);\n\n  return fieldValidation;\n}\n\nfunction validateValueRequirement({ value, required, currentIndex }, fieldValidation, formState) {\n  const valueRequired = typeof required === 'function' ? required({ ...formState, currentIndex }) : required;\n  if (valueRequired && isNullishOrEmpty(value)) {\n    fieldValidation.validField = false;\n    fieldValidation.errorMessageSuffix = ' obligatoire';\n  }\n}\n\nfunction validateValueType(value, type, fieldValidation) {\n  if (typeof value !== type) {\n    fieldValidation.validField = false;\n    fieldValidation.errorMessageSuffix = ' non valide';\n  }\n}\n\nfunction validateValueDataType(value, dataType, fieldValidation) {\n  const dataTypeValidationStrategies = { email: isValidEmail, phone: isValidPhone };\n  if (!dataType || !Object.keys(dataTypeValidationStrategies).includes(dataType)) return;\n  if (!dataTypeValidationStrategies[dataType](value)) {\n    fieldValidation.validField = false;\n    fieldValidation.errorMessageSuffix = ' non valide';\n  }\n}\n\nfunction validateValuePattern(value, pattern, fieldValidation) {\n  if (pattern && !pattern.test(value)) {\n    fieldValidation.validField = false;\n    fieldValidation.errorMessageSuffix = ' est non valide';\n  }\n}\n\nfunction extractFormStateUpdates(source = {}, formState = {}) {\n  const updates = {};\n  Object.keys(formState).forEach((property) => {\n    if (JSON.stringify(formState[property]) !== JSON.stringify(source[property])) {\n      updates[property] = formState[property];\n    }\n  });\n\n  return updates;\n}\n\nexport default { validateForm, extractFormStateUpdates };\n","import { useState, useCallback } from 'react';\nimport { cloneObject } from '../../_helpers/types.helper';\n\nexport default function ({ onSubmit } = {}) {\n  const [formState, setFormState] = useState({});\n  const [formErrors, setFormErrors] = useState({});\n  const [formDisabledFields, setFormDisabledFields] = useState([]);\n  const [mode, setMode] = useState('');\n\n  const handleChange = useCallback(({ name, value }) => {\n    setFormState((currentFormState) => ({\n      ...currentFormState,\n      [name]: value,\n    }));\n    setFormErrors((currentFormErrors) => {\n      if (currentFormErrors[name]) {\n        const clone = cloneObject(currentFormErrors);\n        delete clone[name];\n\n        return clone;\n      }\n\n      return currentFormErrors;\n    });\n  });\n\n  const handleSubmit = useCallback((evt) => {\n    if (evt) evt.preventDefault();\n    onSubmit(evt);\n  }, []);\n\n  const updateFormState = useCallback((formStateUpdates = {}) => {\n    const clonedStateUpdates = { ...formStateUpdates };\n    const fieldsToDelete = ['id', 'created', 'updated', 'deleted', 'deletedAt'];\n    fieldsToDelete.forEach((field) => delete clonedStateUpdates[field]);\n    setFormState((currentFormState) => ({ ...currentFormState, ...clonedStateUpdates }));\n  }, []);\n\n  const resetFormState = useCallback((formStateUpdates = {}) => {\n    setFormState(formStateUpdates);\n    setFormErrors({});\n  }, []);\n\n  return {\n    formState,\n    formErrors,\n    formDisabledFields,\n    mode,\n    setFormErrors,\n    setFormDisabledFields,\n    handleChange,\n    handleSubmit,\n    updateFormState,\n    resetFormState,\n    setMode,\n  };\n}\n","import { LANGUAGES } from '../enums';\nimport { LABEL_EMAIL, LABEL_PASSWORD } from '../labels';\n\nexport default function ({ language = LANGUAGES.FR } = {}) {\n  return [\n    {\n      property: 'email',\n      type: 'string',\n      label: LABEL_EMAIL({ language }),\n      required: true,\n    },\n    {\n      property: 'password',\n      type: 'string',\n      label: LABEL_PASSWORD({ language }),\n      required: true,\n    },\n  ];\n}\n","import { HEATING_TYPES, LANGUAGES } from '../enums';\nimport {\n  LABEL_BASEMENT_AREA_FOR_BOILER,\n  LABEL_BASEMENT_INCLUDED,\n  LABEL_BIRTHDATE,\n  LABEL_BUILDING_AGE,\n  LABEL_CITY,\n  LABEL_COMMENTS,\n  LABEL_FIREPLACE_INCLUDED,\n  LABEL_FULL_NAME,\n  LABEL_HEATING_TYPE,\n  LABEL_LIVING_SPACE_AREA,\n  LABEL_LOFT_AREA,\n  LABEL_LOFT_COMMENTS,\n  LABEL_LOFT_INCLUDED,\n  LABEL_LOFT_INSULATED,\n  LABEL_LOFT_INSULATION_PERIOD,\n  LABEL_LOFT_TYPE,\n  LABEL_LOW_FLOOR_INSULATION_PERIOD,\n  LABEL_MPR_BENEFICIARY,\n  LABEL_NUMBER_OF_DEPENDENTS,\n  LABEL_OIL_HEATING_TYPE_BOILER,\n  LABEL_ONE_EURO_BENEFICIARY,\n  LABEL_OPERATION_TYPE,\n  LABEL_OWNING_TYPE,\n  LABEL_PHONE_NUMBER,\n  LABEL_POSTAL_CODE,\n  LABEL_RADIATOR_TYPE,\n  LABEL_REFERENCE_TAX_INCOME,\n  LABEL_STREET_NAME,\n  LABEL_STREET_NUMBER,\n  LABEL_TAX_NOTICE_NUMBER,\n  LABEL_TAX_NOTICE_REFERENCE,\n  LABEL_WALL_INSULATION_TYPE,\n  LABEL_WATER_HEATING_TYPE,\n  LABEL_WATER_HEATING_TYPE_SPECIFIED,\n} from '../labels';\n\nexport default function ({ language = LANGUAGES.FR } = {}) {\n  return [\n    {\n      property: 'operationType',\n      type: 'string',\n      label: LABEL_OPERATION_TYPE({ language }),\n      required: true,\n    },\n    {\n      property: 'fullName',\n      type: 'string',\n      label: LABEL_FULL_NAME({ language }),\n      required: true,\n    },\n    {\n      property: 'buildingAge',\n      type: 'string',\n      label: LABEL_BUILDING_AGE({ language }),\n      required: true,\n    },\n    {\n      property: 'livingSpaceArea',\n      type: 'number',\n      label: LABEL_LIVING_SPACE_AREA({ language }),\n      required: true,\n    },\n    {\n      property: 'loftIncluded',\n      type: 'boolean',\n      label: LABEL_LOFT_INCLUDED({ language }),\n      required: true,\n    },\n    {\n      property: 'loftType',\n      type: 'string',\n      label: LABEL_LOFT_TYPE({ language }),\n      required({ loftIncluded }) {\n        return loftIncluded;\n      },\n    },\n    {\n      property: 'loftArea',\n      type: 'number',\n      label: LABEL_LOFT_AREA({ language }),\n      required({ loftIncluded }) {\n        return loftIncluded;\n      },\n    },\n    {\n      property: 'loftInsulated',\n      type: 'boolean',\n      label: LABEL_LOFT_INSULATED({ language }),\n      required({ loftIncluded }) {\n        return loftIncluded;\n      },\n    },\n    {\n      property: 'loftInsulationPeriod',\n      type: 'string',\n      label: LABEL_LOFT_INSULATION_PERIOD({ language }),\n      required({ loftInsulated }) {\n        return loftInsulated;\n      },\n    },\n    {\n      property: 'loftComments',\n      type: 'string',\n      label: LABEL_LOFT_COMMENTS({ language }),\n    },\n    {\n      property: 'mprBeneficiary',\n      type: 'boolean',\n      label: LABEL_MPR_BENEFICIARY({ language }),\n      required: true,\n    },\n    {\n      property: 'oneEuroBeneficiary',\n      type: 'boolean',\n      label: LABEL_ONE_EURO_BENEFICIARY({ language }),\n      required: true,\n    },\n    {\n      property: 'occupants',\n      type: 'array',\n      required: true,\n      minLength: 1,\n      fields: [\n        {\n          property: 'taxNoticeNumber',\n          type: 'string',\n          label: LABEL_TAX_NOTICE_NUMBER({ language }),\n          required({ currentIndex }) {\n            return currentIndex === 0;\n          },\n        },\n        {\n          property: 'taxNoticeReference',\n          type: 'string',\n          label: LABEL_TAX_NOTICE_REFERENCE({ language }),\n          required({ currentIndex }) {\n            return currentIndex === 0;\n          },\n        },\n        {\n          property: 'referenceTaxIncome',\n          type: 'number',\n          label: LABEL_REFERENCE_TAX_INCOME({ language }),\n          required({ currentIndex }) {\n            return currentIndex === 0;\n          },\n        },\n        {\n          property: 'birthDate',\n          type: 'object',\n          label: LABEL_BIRTHDATE({ language }),\n          required({ currentIndex }) {\n            return currentIndex === 0;\n          },\n        },\n      ],\n    },\n    {\n      property: 'numberOfDependents',\n      type: 'number',\n      label: LABEL_NUMBER_OF_DEPENDENTS({ language }),\n      required: true,\n    },\n    {\n      property: 'streetNumber',\n      type: 'string',\n      label: LABEL_STREET_NUMBER({ language }),\n      required: true,\n    },\n    {\n      property: 'streetName',\n      type: 'string',\n      label: LABEL_STREET_NAME({ language }),\n      required: true,\n    },\n    {\n      property: 'city',\n      type: 'string',\n      label: LABEL_CITY({ language }),\n      required: true,\n    },\n    {\n      property: 'postalCode',\n      type: 'string',\n      label: LABEL_POSTAL_CODE({ language }),\n      required: true,\n    },\n    {\n      property: 'owningType',\n      type: 'string',\n      label: LABEL_OWNING_TYPE({ language }),\n      required: true,\n    },\n    {\n      property: 'wallInsulationType',\n      type: 'string',\n      label: LABEL_WALL_INSULATION_TYPE({ language }),\n      required: true,\n    },\n    {\n      property: 'heatingType',\n      type: 'string',\n      label: LABEL_HEATING_TYPE({ language }),\n      required: true,\n    },\n    {\n      property: 'oilHeatingTypeBoiler',\n      type: 'boolean',\n      label: LABEL_OIL_HEATING_TYPE_BOILER({ language }),\n      required({ heatingType }) {\n        return heatingType === HEATING_TYPES.GAS;\n      },\n    },\n    {\n      property: 'waterHeatingType',\n      type: 'string',\n      label: LABEL_WATER_HEATING_TYPE({ language }),\n      required: true,\n    },\n    {\n      property: 'waterHeatingTypeSpecified',\n      type: 'string',\n      label: LABEL_WATER_HEATING_TYPE_SPECIFIED({ language }),\n    },\n    {\n      property: 'basementIncluded',\n      type: 'boolean',\n      label: LABEL_BASEMENT_INCLUDED({ language }),\n      required: true,\n    },\n    {\n      property: 'lowFloorInsulationPeriod',\n      type: 'string',\n      label: LABEL_LOW_FLOOR_INSULATION_PERIOD({ language }),\n      required({ basementIncluded }) {\n        return basementIncluded;\n      },\n    },\n    {\n      property: 'basementAreaForBoiler',\n      type: 'boolean',\n      label: LABEL_BASEMENT_AREA_FOR_BOILER({ language }),\n      required({ basementIncluded }) {\n        return basementIncluded;\n      },\n    },\n    {\n      property: 'radiatorType',\n      type: 'string',\n      label: LABEL_RADIATOR_TYPE({ language }),\n    },\n    {\n      property: 'fireplaceIncluded',\n      type: 'boolean',\n      label: LABEL_FIREPLACE_INCLUDED({ language }),\n      required: true,\n    },\n    {\n      property: 'phone',\n      type: 'string',\n      dataType: 'phone',\n      label: LABEL_PHONE_NUMBER({ language }),\n      required: true,\n    },\n    {\n      property: 'comments',\n      type: 'string',\n      label: LABEL_COMMENTS({ language }),\n    },\n  ];\n}\n","import { isNonEmptyString } from '../dataValidator.helper';\nimport { LANGUAGES } from '../enums';\nimport { LABEL_CONFIRM_PASSWORD, LABEL_EMAIL, LABEL_FIRST_NAME, LABEL_LAST_NAME, LABEL_PASSWORD, LABEL_PASSWORDS_ARE_DIFFERENT, LABEL_ROLE } from '../labels';\n\nexport default function ({ language = LANGUAGES.FR } = {}) {\n  return [\n    {\n      property: 'lastName',\n      type: 'string',\n      label: LABEL_LAST_NAME({ language }),\n      required: true,\n    },\n    {\n      property: 'firstName',\n      type: 'string',\n      label: LABEL_FIRST_NAME({ language }),\n      required: true,\n    },\n    {\n      property: 'role',\n      type: 'string',\n      label: LABEL_ROLE({ language }),\n      required: true,\n    },\n    {\n      property: 'email',\n      type: 'string',\n      dataType: 'email',\n      label: LABEL_EMAIL({ language }),\n      required: true,\n    },\n    {\n      property: 'password',\n      type: 'string',\n      label: LABEL_PASSWORD({ language }),\n      required: true,\n    },\n    {\n      property: 'confirmPassword',\n      type: 'string',\n      label: LABEL_CONFIRM_PASSWORD({ language }),\n      required: true,\n      validate({ password, confirmPassword }, formErrors = {}) {\n        const samePasswords = isNonEmptyString(password) && isNonEmptyString(confirmPassword) && password === confirmPassword;\n        if (!samePasswords) formErrors.confirmPassword = LABEL_PASSWORDS_ARE_DIFFERENT({ language });\n\n        return samePasswords;\n      },\n    },\n  ];\n}\n","import { useCallback, useState } from 'react';\n\nexport default function ({ initialTitle = '' } = {}) {\n  const [shown, setShown] = useState(false);\n  const [title, setTitle] = useState(initialTitle);\n\n  const handleShow = useCallback(() => {\n    setShown(true);\n  }, []);\n\n  const handleHide = useCallback(() => {\n    setShown(false);\n  }, []);\n\n  return {\n    shown,\n    title,\n    setTitle,\n    handleShow,\n    handleHide,\n  };\n}\n"],"sourceRoot":""}